@model FinancialPortal.ViewModels.DashboardVM
@{
    ViewBag.Title = "Dashboard";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Budget Spending
                    @Html.DropDownList("BudgetMonths", null, new { @class = "pull-right" })
                </div>
                <div class="panel-body">
                    <div id="budget-chart"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Current Balances
                </div>
                <div class="panel-body">
                    <div id="account-chart"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Total Spending by Budget Category
                    @Html.DropDownList("SpendingMonths",null,new { @class="pull-right"})
                </div>
                <div class="panel-body">
                    <div class="flot-chart">
                        <div class="flot-chart-content" id="pie-chart"></div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-6">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Recent Transactions
                </div>
                <div class="panel-body">
                    <table width="100%">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(t=>t.Transactions.First().Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(t => t.Transactions.First().Description)
                                </th>
                                <th style="text-align:right">
                                    @Html.DisplayNameFor(t => t.Transactions.First().Value)
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var trans in Model.Transactions)
                            {
                                <tr>
                                    <td style="padding:.25em">
                                        @Html.DisplayFor(t => trans.Name)
                                    </td>
                                    <td style="padding:.25em">
                                        @Html.DisplayFor(t => trans.Description)
                                    </td>
                                    <td style="padding:.25em; text-align:right">
                                        $@Html.DisplayFor(t => trans.Value)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
<script src="~/Scripts/jquery.flot.js"></script>
<script src="~/Scripts/jquery.flot.pie.js"></script>
<script src="~/Scripts/jquery.flot.resize.js"></script>
<script src="~/Scripts/jquery.flot.tooltip.min.js"></script>    
    <script type="text/javascript">
        @*var pie_data = @Html.Raw(Model.DashSpent);
        var budget_data = @Html.Raw(Model.DashBudgets);
        var account_data = @Html.Raw(Model.DashAccounts);*@
        @*@foreach(var bud in Model.Budgets)
        {
            @:pie_data.push({label: '@bud.Name',data: @bud.Spent});
                    @:budget_data.push({name: '@bud.Name',amount:@bud.Value,spent:@bud.Spent});
                }
        @foreach(var bank in Model.Banks)
        {
            if(bank.ReconciledBalance != null)
            {
                @:account_data.push({name: '@bank.Name', amount:@bank.Balance, reconciled:@bank.ReconciledBalance});
            }
            else
            {
                @:account_data.push({name: '@bank.Name', amount:@bank.Balance});
            }
        }*@
        function refreshBudgets(month){
            $.get("/Home/GetBudgetsData/", { month:month },function(data){
                Morris.Bar({
                    element: 'budget-chart',
                    data: data,
                    xkey: 'Name',
                    ykeys: ['Amount', 'Spent'],
                    labels: ['Budgeted Amount', 'Amount Spent'],
                    hideHover: 'auto',
                    barColors:['#5cb85c','#d9534f'],
                    resize: true
                });
            })
        }

        function refreshAccounts() {
            $.get("/Home/GetAccountsData/", function (data) {
                Morris.Bar({
                    element: 'account-chart',
                    data: data,
                    xkey: 'Name',
                    ykeys: ['Amount', 'Reconciled'],
                    labels: ['Balance', 'Reconciled Balance'],
                    hideHover: 'auto',
                    resize: true
                });
            })
        }
        
        function refreshSpending(month) {
            $.get("/Home/GetSpendingData/", { month: month }, function (data) {
                var plotObj = $.plot($("#pie-chart"), data, {
                    series: {
                        pie: {
                            show: true
                        }
                    },
                    grid: {
                        hoverable: true
                    },
                    tooltip: true,
                    tooltipOpts: {
                        content: "%p.0%, %s", // show percentages, rounding to 2 decimal places
                        shifts: {
                            x: 20,
                            y: 0
                        },
                        defaultTheme: true
                    }
                });
            })
        }
        refreshAccounts();
        refreshBudgets(@Model.Month.Id);
        refreshSpending(@Model.Month.Id);
        $("#BudgetMonths").change(function () {
            $("#budget-chart").empty()
            refreshBudgets($("#BudgetMonths").val());
        })
        $("#SpendingMonths").change(function () {
            refreshSpending($("#SpendingMonths").val());
        })
    </script>
}